// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRoles {
  ADMIN
  DELIVERYMAN
  RECIPIENT
}

model User {
  id         String    @id @default(uuid())
  name       String
  cpf        String    @unique
  password   String
  role       UserRoles @default(RECIPIENT)
  isActive   Boolean   @default(true)
  canceledAt DateTime? @map("canceled_at")

  address           Address?
  deliverymanOrders Order[]        @relation("deliverymanOrders")
  orders            Order[]
  notifications     Notification[]

  @@map("users")
}

model Address {
  id           String  @id @default(uuid())
  recipientId  String  @unique @map("recipient_id")
  street       String
  number       Int
  neighborhood String
  city         String
  cep          String
  latitude     Decimal
  longitude    Decimal

  recipient User @relation(fields: [recipientId], references: [id])

  @@map("addresses")
}

model Order {
  id            String    @id @default(uuid())
  recipientId   String    @map("recipient_id")
  deliverymanId String?   @map("deliveryman_id")
  description   String
  postedAt      DateTime? @map("posted_at")
  withdrawnAt   DateTime? @map("withdrawn_at")
  deliveredAt   DateTime? @map("delivered_at")
  returnedAt    DateTime? @map("returned_at")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @updatedAt @map("updated_at")

  recipient   User   @relation(fields: [recipientId], references: [id])
  deliveryman User?  @relation("deliverymanOrders", fields: [deliverymanId], references: [id])
  image       Image?

  @@map("orders")
}

model Image {
  id      String  @id @default(uuid())
  orderId String? @unique @map("order_id")
  title   String
  url     String

  order Order? @relation(fields: [orderId], references: [id])

  @@map("images")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  readAt      DateTime?
  createdAt   DateTime  @default(now())

  recipient User @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
